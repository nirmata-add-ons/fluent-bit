---
apiVersion: "rbac.authorization.k8s.io/v1beta1"
kind: "ClusterRole"
rules:
- apiGroups:
  - ""
  nonResourceURLs: []
  resourceNames: []
  resources:
  - "namespaces"
  - "pods"
  verbs:
  - "get"
  - "list"
  - "watch"
metadata:
  annotations: {}
  name: "fluent-bit-read"
  labels:
    app.kubernetes.io/name: "fluent-bit"
---
apiVersion: "v1"
kind: "ServiceAccount"
metadata:
  namespace: "logging"
  annotations: {}
  name: "fluent-bit"
  labels:
    app.kubernetes.io/name: "fluent-bit"
---
kind: "ConfigMap"
apiVersion: "v1"
data:
  input-kubernetes.conf: "[INPUT]\n    Name              tail\n    Tag           \
    \    kube.*\n    Path              /var/log/containers/*.log\n    Parser     \
    \       docker\n    DB                /var/log/flb_kube.db\n    Mem_Buf_Limit\
    \     5MB\n    Skip_Long_Lines   On\n    Refresh_Interval  10\n"
  output-elasticsearch.conf: "[OUTPUT]\n    Name            es\n    Match        \
    \   *\n    Host            ${FLUENT_ELASTICSEARCH_HOST}\n    Port            ${FLUENT_ELASTICSEARCH_PORT}\n\
    \    Logstash_Format On\n    Replace_Dots    On\n    Retry_Limit     False\n"
  fluent-bit.conf: "[SERVICE]\n    Flush         1\n    Log_Level     info\n    Daemon\
    \        off\n    Parsers_File  parsers.conf\n    HTTP_Server   On\n    HTTP_Listen\
    \   0.0.0.0\n    HTTP_Port     2020\n\n@INCLUDE input-kubernetes.conf\n@INCLUDE\
    \ filter-kubernetes.conf\n@INCLUDE output-elasticsearch.conf\n"
  parsers.conf: "[PARSER]\n    Name   apache\n    Format regex\n    Regex  ^(?<host>[^\
    \ ]*) [^ ]* (?<user>[^ ]*) \\[(?<time>[^\\]]*)\\] \"(?<method>\\S+)(?: +(?<path>[^\\\
    \"]*?)(?: +\\S*)?)?\" (?<code>[^ ]*) (?<size>[^ ]*)(?: \"(?<referer>[^\\\"]*)\"\
    \ \"(?<agent>[^\\\"]*)\")?$\n    Time_Key time\n    Time_Format %d/%b/%Y:%H:%M:%S\
    \ %z\n\n[PARSER]\n    Name   apache2\n    Format regex\n    Regex  ^(?<host>[^\
    \ ]*) [^ ]* (?<user>[^ ]*) \\[(?<time>[^\\]]*)\\] \"(?<method>\\S+)(?: +(?<path>[^\
    \ ]*) +\\S*)?\" (?<code>[^ ]*) (?<size>[^ ]*)(?: \"(?<referer>[^\\\"]*)\" \"(?<agent>[^\\\
    \"]*)\")?$\n    Time_Key time\n    Time_Format %d/%b/%Y:%H:%M:%S %z\n\n[PARSER]\n\
    \    Name   apache_error\n    Format regex\n    Regex  ^\\[[^ ]* (?<time>[^\\\
    ]]*)\\] \\[(?<level>[^\\]]*)\\](?: \\[pid (?<pid>[^\\]]*)\\])?( \\[client (?<client>[^\\\
    ]]*)\\])? (?<message>.*)$\n\n[PARSER]\n    Name   nginx\n    Format regex\n  \
    \  Regex ^(?<remote>[^ ]*) (?<host>[^ ]*) (?<user>[^ ]*) \\[(?<time>[^\\]]*)\\\
    ] \"(?<method>\\S+)(?: +(?<path>[^\\\"]*?)(?: +\\S*)?)?\" (?<code>[^ ]*) (?<size>[^\
    \ ]*)(?: \"(?<referer>[^\\\"]*)\" \"(?<agent>[^\\\"]*)\")?$\n    Time_Key time\n\
    \    Time_Format %d/%b/%Y:%H:%M:%S %z\n\n[PARSER]\n    Name   json\n    Format\
    \ json\n    Time_Key time\n    Time_Format %d/%b/%Y:%H:%M:%S %z\n\n[PARSER]\n\
    \    Name        docker\n    Format      json\n    Time_Key    time\n    Time_Format\
    \ %Y-%m-%dT%H:%M:%S.%L\n    Time_Keep   On\n\n[PARSER]\n    Name        syslog\n\
    \    Format      regex\n    Regex       ^\\<(?<pri>[0-9]+)\\>(?<time>[^ ]* {1,2}[^\
    \ ]* [^ ]*) (?<host>[^ ]*) (?<ident>[a-zA-Z0-9_\\/\\.\\-]*)(?:\\[(?<pid>[0-9]+)\\\
    ])?(?:[^\\:]*\\:)? *(?<message>.*)$\n    Time_Key    time\n    Time_Format %b\
    \ %d %H:%M:%S\n"
  filter-kubernetes.conf: "[FILTER]\n    Name                kubernetes\n    Match\
    \               kube.*\n    Kube_URL            https://kubernetes.default.svc:443\n\
    \    Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n\
    \    Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token\n\
    \    Kube_Tag_Prefix     kube.var.log.containers.\n    Merge_Log           On\n\
    \    Merge_Log_Key       log_processed\n    K8S-Logging.Parser  On\n    K8S-Logging.Exclude\
    \ Off\n"
binaryData: {}
metadata:
  namespace: "logging"
  annotations: {}
  name: "fluent-bit-config"
  labels:
    app.kubernetes.io/name: "fluent-bit"
    k8s-app: "fluent-bit"
---
apiVersion: "rbac.authorization.k8s.io/v1beta1"
kind: "ClusterRoleBinding"
metadata:
  annotations: {}
  name: "fluent-bit-read"
  labels:
    app.kubernetes.io/name: "fluent-bit"
subjects:
- kind: "ServiceAccount"
  name: "fluent-bit"
  namespace: "logging"
roleRef:
  apiGroup: "rbac.authorization.k8s.io"
  kind: "ClusterRole"
  name: "fluent-bit-read"
---
apiVersion: "apps/v1"
kind: "DaemonSet"
metadata:
  namespace: "logging"
  annotations: {}
  name: "fluent-bit"
  labels:
    kubernetes.io/cluster-service: "true"
    app.kubernetes.io/name: "fluent-bit"
    version: "v1"
    k8s-app: "fluent-bit-logging"
    app.kubernetes.io/component: "daemonset.fluent-bit"
spec:
  minReadySeconds: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: "fluent-bit-logging"
      app.kubernetes.io/component: "daemonset.fluent-bit"
    matchExpressions: []
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/api/v1/metrics/prometheus"
        prometheus.io/port: "2020"
      labels:
        kubernetes.io/cluster-service: "true"
        version: "v1"
        k8s-app: "fluent-bit-logging"
        app.kubernetes.io/component: "daemonset.fluent-bit"
    spec:
      terminationGracePeriodSeconds: 10
      nodeSelector: {}
      serviceAccountName: "fluent-bit"
      volumes:
      - name: "varlog"
        hostPath:
          path: "/var/log"
      - name: "varlibdockercontainers"
        hostPath:
          path: "/var/lib/docker/containers"
      - name: "fluent-bit-config"
        configMap:
          name: "fluent-bit-config"
      containers:
      - name: "fluent-bit"
        image: "fluent/fluent-bit:1.5.2"
        command: []
        args: []
        imagePullPolicy: "Always"
        ports:
        - containerPort: 2020
          protocol: "TCP"
        env:
        - name: "FLUENT_ELASTICSEARCH_HOST"
          value: "elasticsearch"
        - name: "FLUENT_ELASTICSEARCH_PORT"
          value: "9200"
        volumeMounts:
        - name: "varlog"
          mountPath: "/var/log"
        - name: "varlibdockercontainers"
          readOnly: true
          mountPath: "/var/lib/docker/containers"
        - name: "fluent-bit-config"
          mountPath: "/fluent-bit/etc/"
      tolerations:
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoSchedule"
      - operator: "Exists"
        effect: "NoExecute"
      - operator: "Exists"
        effect: "NoSchedule"
  updateStrategy:
    type: "RollingUpdate"
    rollingUpdate:
      maxUnavailable: 1
